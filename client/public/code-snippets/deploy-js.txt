//deploy.js
const hre = require("hardhat"); // Import the Hardhat Runtime Environment (hre) module

async function main() {
  const [deployer] = await hre.ethers.getSigners(); // Get the first signer (deployer) from the list of available signers

  const balance = await deployer.getBalance(); // Fetch the balance of the deployer
  console.log("Deployer address:", deployer.address); // Print the deployer's address
  console.log("Deployer balance:", hre.ethers.utils.formatEther(balance), "ETH"); // Print the deployer's balance in ETH

  if (balance.eq(0)) {
    console.error("Error: Deployer account has 0 ETH. Please add funds and try again."); // Error message if deployer has 0 ETH
    return; // Exit the function if there's no balance
  }

  const gasPrice = await hre.ethers.provider.getGasPrice(); // Fetch the current gas price from the provider
  console.log("Current gas price:", hre.ethers.utils.formatUnits(gasPrice, "gwei"), "gwei"); // Print the current gas price in gwei

  // Deploy Xennium contract
  const Xennium = await hre.ethers.getContractFactory("Xennium"); // Get the contract factory for the Xennium contract
  const xennium = await Xennium.deploy(deployer.address); // Deploy the Xennium contract, passing the deployer's address as an argument

  await xennium.deployed(); // Wait for the contract deployment to complete

  console.log("Xennium deployed to:", xennium.address); // Print the address where the Xennium contract is deployed
}

main()
  .then(() => process.exit(0)) // Exit the process successfully if the main function resolves
  .catch((error) => {
    console.error(error); // Print any errors that occur during execution
    process.exit(1); // Exit the process with a failure code
  });
